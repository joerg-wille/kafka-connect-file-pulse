{
  "connector.class": "io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector",
  "filters": "ParseDelimitedRow, SetTopic, SetKey",
  "filters.SetTopic.value": "replace_all(lowercase($.type), '\\s','-')",
  "filters.SetTopic.field": "$topic",
  "filters.SetTopic.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
  "filters.SetKey.value": "{{ lowercase($.artist) }}-{{ lowercase($.title) }}",
  "filters.SetKey.field": "$key",
  "filters.SetKey.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
  "filters.ParseDelimitedRow.extractColumnName": "headers",
  "filters.ParseDelimitedRow.trimColumn": "true",
  "filters.ParseDelimitedRow.type": "io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter",
  "fs.cleanup.policy.class": "io.streamthoughts.kafka.connect.filepulse.fs.clean.LogCleanupPolicy",
  "fs.listing.class": "io.streamthoughts.kafka.connect.filepulse.fs.LocalFSDirectoryListing",
  "fs.listing.directory.path": "/tmp/kafka-connect/examples/",
  "fs.listing.interval.ms": "10000",
  "offset.attributes.string": "name+hash",
  "skip.headers": "1",
  "topic": "connect-file-pulse-quickstart-csv",
  "tasks.reader.class": "io.streamthoughts.kafka.connect.filepulse.fs.reader.LocalRowFileInputReader",
  "tasks.file.status.storage.class": "io.streamthoughts.kafka.connect.filepulse.state.KafkaFileObjectStateBackingStore",
  "tasks.file.status.storage.bootstrap.servers": "kafka:29092",
  "tasks.file.status.storage.topic": "connect-file-pulse-status",
  "tasks.file.status.storage.topic.partitions": 10,
  "tasks.file.status.storage.topic.replication.factor": 1,
  "tasks.max": 1
}
